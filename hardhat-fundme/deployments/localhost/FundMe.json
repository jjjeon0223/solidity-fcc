{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NoOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd4b707b497bd458b3964306270b80ed11afd112d4b522469c2fa67314eb0ca23",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1044762",
    "logsBloom": "0x
    "blockHash": "0x4956cb2294e99f942ab36a4f64670020f3ad61508062022312d600d21b5bb0ce",
    "transactionHash": "0xd4b707b497bd458b3964306270b80ed11afd112d4b522469c2fa67314eb0ca23",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1044762",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a76977b0b0739df25096ab1c9d7eaf2b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NoOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NoOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders; \\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NoOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory memoryFunders = funders;\\n        for(uint256 funderIndex = 0; funderIndex < memoryFunders.length; funderIndex++){\\n            address funder = memoryFunders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0xd18665c7476dbf501a28109e137a1e4a28a1768af1f249cd3281ab814963d054\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012893803806200128983398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61111d806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610135578063be2693f01461013f578063dba6335f14610149578063dc0d3dff146101745761008e565b80633ccfd60b146100985780633e47d6f3146100a25780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100c960048036038101906100c49190610a55565b61052d565b6040516100d69190610a9b565b60405180910390f35b3480156100eb57600080fd5b506100f4610545565b6040516101019190610a9b565b60405180910390f35b34801561011657600080fd5b5061011f610552565b60405161012c9190610b15565b60405180910390f35b61013d6101b1565b005b610147610578565b005b34801561015557600080fd5b5061015e61080a565b60405161016b9190610b3f565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190610b86565b610830565b6040516101a89190610b3f565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086f90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c10565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610c5f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f92ea9eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561041d5760006001828154811061039857610397610cb5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041590610ce4565b915050610375565b50600067ffffffffffffffff81111561043957610438610d2d565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506001908051906020019061047d92919061094b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610d8d565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610dee565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f92ea9eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561068357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610639575b5050505050905060005b815181101561070d5760008282815181106106ab576106aa610cb5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070590610ce4565b91505061068d565b50600067ffffffffffffffff81111561072957610728610d2d565b5b6040519080825280602002602001820160405280156107575781602001602082028036833780820191505090505b506001908051906020019061076d92919061094b565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107b690610d8d565b60006040518083038185875af1925050503d80600081146107f3576040519150601f19603f3d011682016040523d82523d6000602084013e6107f8565b606091505b505090508061080657600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061084057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061087b836108ab565b90506000670de0b6b3a764000085836108949190610e0e565b61089e9190610e97565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f457600080fd5b505afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190610f55565b5050509150506402540be400816109439190610fd0565b915050919050565b8280548282559060005260206000209081019282156109c4579160200282015b828111156109c35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096b565b5b5090506109d191906109d5565b5090565b5b808211156109ee5760008160009055506001016109d6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a22826109f7565b9050919050565b610a3281610a17565b8114610a3d57600080fd5b50565b600081359050610a4f81610a29565b92915050565b600060208284031215610a6b57610a6a6109f2565b5b6000610a7984828501610a40565b91505092915050565b6000819050919050565b610a9581610a82565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b6000819050919050565b6000610adb610ad6610ad1846109f7565b610ab6565b6109f7565b9050919050565b6000610aed82610ac0565b9050919050565b6000610aff82610ae2565b9050919050565b610b0f81610af4565b82525050565b6000602082019050610b2a6000830184610b06565b92915050565b610b3981610a17565b82525050565b6000602082019050610b546000830184610b30565b92915050565b610b6381610a82565b8114610b6e57600080fd5b50565b600081359050610b8081610b5a565b92915050565b600060208284031215610b9c57610b9b6109f2565b5b6000610baa84828501610b71565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bfa601b83610bb3565b9150610c0582610bc4565b602082019050919050565b60006020820190508181036000830152610c2981610bed565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6a82610a82565b9150610c7583610a82565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610caa57610ca9610c30565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cef82610a82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2257610d21610c30565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d77600083610d5c565b9150610d8282610d67565b600082019050919050565b6000610d9882610d6a565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dd8600b83610bb3565b9150610de382610da2565b602082019050919050565b60006020820190508181036000830152610e0781610dcb565b9050919050565b6000610e1982610a82565b9150610e2483610a82565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5d57610e5c610c30565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea282610a82565b9150610ead83610a82565b925082610ebd57610ebc610e68565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee781610ec8565b8114610ef257600080fd5b50565b600081519050610f0481610ede565b92915050565b6000819050919050565b610f1d81610f0a565b8114610f2857600080fd5b50565b600081519050610f3a81610f14565b92915050565b600081519050610f4f81610b5a565b92915050565b600080600080600060a08688031215610f7157610f706109f2565b5b6000610f7f88828901610ef5565b9550506020610f9088828901610f2b565b9450506040610fa188828901610f40565b9350506060610fb288828901610f40565b9250506080610fc388828901610ef5565b9150509295509295909350565b6000610fdb82610f0a565b9150610fe683610f0a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102557611024610c30565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106257611061610c30565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109f5761109e610c30565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110dc576110db610c30565b5b82820290509291505056fea2646970667358221220257fb14591dc6d5fc68148217c3bc66032107781dd97c52c60adabebfe02b18264736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610135578063be2693f01461013f578063dba6335f14610149578063dc0d3dff146101745761008e565b80633ccfd60b146100985780633e47d6f3146100a25780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100c960048036038101906100c49190610a55565b61052d565b6040516100d69190610a9b565b60405180910390f35b3480156100eb57600080fd5b506100f4610545565b6040516101019190610a9b565b60405180910390f35b34801561011657600080fd5b5061011f610552565b60405161012c9190610b15565b60405180910390f35b61013d6101b1565b005b610147610578565b005b34801561015557600080fd5b5061015e61080a565b60405161016b9190610b3f565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190610b86565b610830565b6040516101a89190610b3f565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086f90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c10565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610c5f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f92ea9eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561041d5760006001828154811061039857610397610cb5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041590610ce4565b915050610375565b50600067ffffffffffffffff81111561043957610438610d2d565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506001908051906020019061047d92919061094b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610d8d565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610dee565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f92ea9eae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561068357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610639575b5050505050905060005b815181101561070d5760008282815181106106ab576106aa610cb5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070590610ce4565b91505061068d565b50600067ffffffffffffffff81111561072957610728610d2d565b5b6040519080825280602002602001820160405280156107575781602001602082028036833780820191505090505b506001908051906020019061076d92919061094b565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107b690610d8d565b60006040518083038185875af1925050503d80600081146107f3576040519150601f19603f3d011682016040523d82523d6000602084013e6107f8565b606091505b505090508061080657600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061084057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061087b836108ab565b90506000670de0b6b3a764000085836108949190610e0e565b61089e9190610e97565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f457600080fd5b505afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190610f55565b5050509150506402540be400816109439190610fd0565b915050919050565b8280548282559060005260206000209081019282156109c4579160200282015b828111156109c35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096b565b5b5090506109d191906109d5565b5090565b5b808211156109ee5760008160009055506001016109d6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a22826109f7565b9050919050565b610a3281610a17565b8114610a3d57600080fd5b50565b600081359050610a4f81610a29565b92915050565b600060208284031215610a6b57610a6a6109f2565b5b6000610a7984828501610a40565b91505092915050565b6000819050919050565b610a9581610a82565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b6000819050919050565b6000610adb610ad6610ad1846109f7565b610ab6565b6109f7565b9050919050565b6000610aed82610ac0565b9050919050565b6000610aff82610ae2565b9050919050565b610b0f81610af4565b82525050565b6000602082019050610b2a6000830184610b06565b92915050565b610b3981610a17565b82525050565b6000602082019050610b546000830184610b30565b92915050565b610b6381610a82565b8114610b6e57600080fd5b50565b600081359050610b8081610b5a565b92915050565b600060208284031215610b9c57610b9b6109f2565b5b6000610baa84828501610b71565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bfa601b83610bb3565b9150610c0582610bc4565b602082019050919050565b60006020820190508181036000830152610c2981610bed565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6a82610a82565b9150610c7583610a82565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610caa57610ca9610c30565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cef82610a82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2257610d21610c30565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d77600083610d5c565b9150610d8282610d67565b600082019050919050565b6000610d9882610d6a565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dd8600b83610bb3565b9150610de382610da2565b602082019050919050565b60006020820190508181036000830152610e0781610dcb565b9050919050565b6000610e1982610a82565b9150610e2483610a82565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5d57610e5c610c30565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea282610a82565b9150610ead83610a82565b925082610ebd57610ebc610e68565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee781610ec8565b8114610ef257600080fd5b50565b600081519050610f0481610ede565b92915050565b6000819050919050565b610f1d81610f0a565b8114610f2857600080fd5b50565b600081519050610f3a81610f14565b92915050565b600081519050610f4f81610b5a565b92915050565b600080600080600060a08688031215610f7157610f706109f2565b5b6000610f7f88828901610ef5565b9550506020610f9088828901610f2b565b9450506040610fa188828901610f40565b9350506060610fb288828901610f40565b9250506080610fc388828901610ef5565b9150509295509295909350565b6000610fdb82610f0a565b9150610fe683610f0a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102557611024610c30565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106257611061610c30565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109f5761109e610c30565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110dc576110db610c30565b5b82820290509291505056fea2646970667358221220257fb14591dc6d5fc68148217c3bc66032107781dd97c52c60adabebfe02b18264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}